package mysudoku;

public class App {

	public static void main(String[] args) {
		
		int myarr[] = new int[]{8,0,0,0,0,0,0,0,0,0,0,3,6,0,0,0,0,0,0,7,0,0,9,0,2,0,0,0,5,0,0,0,7,0,0,0,0,0,0,0,4,5,7,0,0,0,0,0,1,0,0,0,3,0,0,0,1,0,0,0,0,6,8,0,0,8,5,0,0,0,1,0,0,9,0,0,0,0,4,0,0};
		Sudoku attempt = new Sudoku(myarr,9);
		attempt.printBoard();
		
		//{4,0,0,0,14,0,0,0,0,0,0,6,16,0,0,5,0,0,16,7,1,13,0,10,0,0,0,9,0,12,0,6,13,0,0,12,8,3,0,15,0,0,10,1,4,0,0,0,3,2,14,0,0,0,9,12,0,0,0,0,15,1,7,10,1,0,12,0,13,0,0,4,0,0,14,0,0,7,11,0,14,0,3,2,0,11,0,0,0,7,0,0,0,16,0,0,0,16,0,0,0,6,0,0,13,11,0,0,0,0,14,0,0,0,0,13,0,0,10,0,0,0,1,0,0,0,0,9,7,5,9,6,0,2,0,0,3,0,8,0,0,14,16,0,12,0,15,14,0,0,0,0,9,5,0,0,0,0,0,0,0,0,1,0,0,8,15,0,6,0,0,7,0,4,5,0,0,8,0,0,0,0,7,0,0,1,0,0,6,0,0,0,0,0,0,0,0,9,0,0,1,0,0,14,3,10,15,8,0,6,0,1,10,0,14,0,16,0,0,12,0,13,0,0,5,0,0,10,2,12,0,7,0,0,13,11,0,6,4,0,0,0,0,16,5,0,0,11,0,4,0,0,0,2,1,0};
		long startTime = System.nanoTime(); 
		attempt.solve();
		long endTime = System.nanoTime();
		System.out.print("\n\n");
		attempt.printBoard();

		System.out.printf("Time taken was %.5f.\n",(double)(endTime-startTime)/1000000000);
		
		//Sudoku mysud = new Sudoku(9);
		//mysud.printBoard();

	}
}
